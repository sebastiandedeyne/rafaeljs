// Generated by CoffeeScript 1.8.0
var Rafael;

Rafael = function() {
  var bind, dimensions, enabled, events, fire, init, isEnabled, oldDimensions, oldPositions, positions, registerNewValues, registerOldValues, runFunctionsForEvent, start, stop;
  enabled = true;
  events = {
    resize: [],
    resizeX: [],
    resizeY: [],
    scroll: [],
    scrollX: [],
    scrollY: []
  };
  dimensions = {
    x: 0,
    y: 0
  };
  oldDimensions = {
    x: 0,
    y: 0
  };
  positions = {
    x: 0,
    y: 0
  };
  oldPositions = {
    x: 0,
    y: 0
  };
  init = function() {
    window.requestAnimationFrame(init);
    if (enabled) {
      registerNewValues();
      fire();
      return registerOldValues();
    }
  };
  bind = function(eventsToBind, callable) {
    var eventToBind, i, _i, _len, _ref, _results;
    _ref = eventsToBind.split(' ');
    _results = [];
    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
      eventToBind = _ref[i];
      if (events.hasOwnProperty(eventToBind)) {
        _results.push(events[eventToBind].push(callable));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };
  registerNewValues = function() {
    dimensions.x = window.innerWidth;
    dimensions.y = window.innerHeight;
    positions.x = document.body.scrollLeft;
    return positions.y = document.body.scrollTop;
  };
  registerOldValues = function() {
    oldDimensions.x = dimensions.x;
    oldDimensions.y = dimensions.y;
    oldPositions.x = positions.x;
    return oldPositions.y = positions.y;
  };
  fire = function() {
    if (dimensions.x !== oldDimensions.x || dimensions.y !== oldDimensions.y) {
      runFunctionsForEvent('resize');
    }
    if (dimensions.x !== oldDimensions.x) {
      runFunctionsForEvent('resizeX');
    }
    if (dimensions.y !== oldDimensions.y) {
      runFunctionsForEvent('resizeY');
    }
    if (positions.x !== oldPositions.x || positions.y !== oldPositions.y) {
      runFunctionsForEvent('scroll');
    }
    if (positions.x !== oldPositions.x) {
      runFunctionsForEvent('scrollX');
    }
    if (positions.y !== oldPositions.y) {
      return runFunctionsForEvent('scrollY');
    }
  };
  runFunctionsForEvent = function(firedEvents) {
    var callable, firedEvent, i, _i, _len, _ref, _results;
    _ref = firedEvents.split(' ');
    _results = [];
    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
      firedEvent = _ref[i];
      _results.push((function() {
        var _j, _len1, _ref1, _results1;
        _ref1 = events[firedEvent];
        _results1 = [];
        for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {
          callable = _ref1[i];
          _results1.push(callable());
        }
        return _results1;
      })());
    }
    return _results;
  };
  stop = function() {
    return enabled = false;
  };
  start = function() {
    return enabled = true;
  };
  isEnabled = function() {
    return enabled;
  };
  return {
    init: init,
    bind: bind,
    dimensions: dimensions,
    oldDimensions: oldDimensions,
    positions: positions,
    oldPositions: oldPositions,
    stop: stop,
    start: start,
    enabled: isEnabled
  };
};
